# Redirect all http (80) to https (443) (www and non-www)
server {
  listen       80;
  # listen       [::]:80 ipv6only=on;
  server_name  <%= @server_name %> www.<%= @server_name %>;
  return       301 https://$server_name:<%= @ssl_public_port %>$request_uri;
}

# Redirect www https traffic to non-www https traffic
server {
  listen      <%= @ssl_public_port %> ssl http2;
  # listen      [::]:<%= @ssl_public_port %> ipv6only=on;
  server_name ~^(www\.)(?<domain><%= @server_name %>)$;

  # TODO
  ssl_certificate     /etc/nginx/ssl/nginx.crt;  # Change to letsencrypt cert
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  # Change to letsencrypt cert

  # Including some SSL configs
  include snippets/ssl-setup.conf;

  include     snippets/letsencrypt-challange.conf;

  return      301 https://$domain:<%= @ssl_public_port %>$request_uri;
}

# Do the https magic and proxy the request to varnish on port 6081
server {
  listen <%= @ssl_public_port %> ssl http2;
  # listen [::]:<%= @ssl_public_port %> ipv6only=on;
  server_name <%= @server_name %>;

  # TODO
  ssl_certificate     /etc/nginx/ssl/nginx.crt;  # Change to letsencrypt cert
  ssl_certificate_key /etc/nginx/ssl/nginx.key;  # Change to letsencrypt cert

  # Including some SSL configs
  include snippets/ssl-setup.conf;

  # Defining personal log files
  access_log /var/log/nginx/<%= @server_name %>.access.log;
  error_log  /var/log/nginx/<%= @server_name %>.error.log;

  # Pass the request to varnish
  location / {
    # running varnish on port 6081
    proxy_pass       http://127.0.0.1:6081;
    # Passing some headers to downstream server, so it can identify the host
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header Host $host;
    proxy_redirect   off;
  }
}

# Backend that proxies to HHVM (PHP processor)
# This will be accessed by Varnish if no cache is found.
server {
  # Only listen to localhost requests (from varnish)
  listen      127.0.0.1:8081;
  server_name <%= @server_name %>;

  access_log /var/log/nginx/<%= @server_name %>.access.log;
  error_log  /var/log/nginx/<%= @server_name %>.error.log;

  # Security resources
  include snippets/security.conf;

  # Pass the request to varnish
  location / {
    # running varnish on port 8080
    proxy_pass       http://127.0.0.1:6081;
    # Passing some headers to downstream server, so it can identify the host
    include proxy_params;
    proxy_set_header X-Forwarded-Port 443;
    proxy_set_header Host $host;
    proxy_redirect   off;
  }
}

# Backend that proxies to HHVM (PHP processor)
# This will be accessed by Varnish if no cache is found.
server {
  # Only listen to localhost requests (from varnish)
  listen      127.0.0.1:8080;
  server_name <%= @server_name %>;

  root <%= @root_folder %>;
  index index.php index.html index.htm;

  access_log /var/log/nginx/<%= @server_name %>.access.log;
  error_log  /var/log/nginx/<%= @server_name %>.error.log;

  include snippets/hhvm.conf;
}
